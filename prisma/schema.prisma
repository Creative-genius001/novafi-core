generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  firstname    String
  lastname     String
  email        String   @unique
  password     String
  phone        String   @unique
  isVerified   Boolean  @default(false) @map("is_verified")
  kycLevel     KYCLevel @default(L1) @map("kyc_level")
  twoFaEnabled Boolean  @default(false) @map("two_fa_enabled")
  twoFaSecret  String?  @map("two_fa_secret")
  referralCode String?  @unique @map("referral_code")
  referredBy   String?  @map("referred_by")
  refreshToken String?  @map("refresh_token")
  expiresAt    String?  @map("expires_at")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  wallet        Wallet?
  transactions  Transaction[]
  kycDocuments  KYCDocument[]
  notifications Notification[]

  @@index([email])
  @@index([isVerified])
  @@index([kycLevel])
  @@index([phone])
  @@index([referralCode])
  @@map("user")
}

enum KYCLevel {
  L1
  L2
  L3
}

model Wallet {
  id        String   @id @default(uuid())
  userId    String   @unique @map("user_id")
  novaId    String   @unique @map("nova_id")
  balance   Decimal  @default(0.0)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
  @@map("wallet")
}

model Transaction {
  id        String            @id @default(uuid())
  userId    String            @map("user_id")
  type      TransactionType
  status    TransactionStatus
  createdAt DateTime          @default(now()) @map("created_at")

  transfer Transfer?
  deposit  Deposit?
  bill     Bill?

  user User @relation(fields: [userId], references: [id])

  @@index([userId, createdAt])
  @@index([type])
  @@index([status])
  @@map("transaction")
}

model Transfer {
  id            String  @id @default(uuid())
  transactionId String  @unique @map("transaction_id")
  amount        Decimal
  fee           Decimal
  bank          String
  accountNumber String  @map("account_number")
  recipientName String  @map("recipient_name")
  referenceId   String? @map("reference_id")
  sessionId     String? @map("session_id")

  transaction Transaction @relation(fields: [transactionId], references: [id])

  @@index([referenceId])
  @@index([sessionId])
  @@map("transfer")
}

model Deposit {
  id            String  @id @default(uuid())
  transactionId String  @unique @map("transaction_id")
  amount        Decimal
  fee           Decimal
  rate          Decimal
  nairaAmount   Decimal @map("naira_amount")
  network       String  @map("network")
  txHash        String  @map("tx_hash")
  referenceId   String  @map("reference_id")

  transaction Transaction @relation(fields: [transactionId], references: [id])

  @@index([network])
  @@index([txHash])
  @@map("deposit")
}

model Bill {
  id            String  @id @default(uuid())
  transactionId String  @unique @map("transaction_id")
  amount        Decimal
  biller        String
  number        String
  referenceId   String  @map("reference_id")

  transaction Transaction @relation(fields: [transactionId], references: [id])

  @@index([referenceId])
  @@map("bill")
}

enum TransactionType {
  DEPOSIT
  TRANSFER
  AIRTIME
  ELECTRICITY
  DATA
}

enum TransactionStatus {
  PENDING
  SUCCESSFUL
  FAILED
  REVERSED
}

model KYCDocument {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  type      String
  fileUrl   String   @map("file_url")
  verified  Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
  @@map("kyc_document")
}

model Notification {
  id      String   @id @default(uuid())
  userId  String   @map("user_id")
  message String
  sentAt  DateTime @default(now()) @map("sent_at")

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
  @@map("notification")
}
